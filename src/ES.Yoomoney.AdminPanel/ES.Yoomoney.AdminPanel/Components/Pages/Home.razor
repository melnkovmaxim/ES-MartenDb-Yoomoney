@page "/"
@using System.Text.Json
@using Confluent.Kafka
@using ES.Yoomoney.Core.Abstractions
@using ES.Yoomoney.Core.IntegrationEvents
@using JasperFx.Core
@using KafkaFlow
@using KafkaFlow.Producers
@using Newtonsoft.Json
@using JsonSerializer = System.Text.Json.JsonSerializer
@rendermode RenderMode.InteractiveServer

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

@currentCount;
@error
<button class="btn btn-primary" @onclick="IncrementCount">Publish event</button>

Last published event: @_lastPublishedEvent

@code {
    private int currentCount = 0;
    [Inject] IProducer<string, string> _producer { get; set; }
    
    private string? error;
    private string? _lastPublishedEvent;

    private async Task IncrementCount()
    {
        var id = Guid.CreateVersion7();
        currentCount++;
        error = "init";


        try
        {
            _lastPublishedEvent = JsonSerializer.Serialize(new OrderCreatedIntegrationEvent(id, 100));
            
            await _producer.ProduceAsync(nameof(OrderCreatedIntegrationEvent), new Message<string, string>()
            {
                Key = id.ToString(),
                Value = _lastPublishedEvent
            });
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
        currentCount++;
    }

}